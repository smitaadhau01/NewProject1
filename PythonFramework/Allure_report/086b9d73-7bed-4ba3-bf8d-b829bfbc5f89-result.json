{"name": "test_OrangeHRM_Login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=127.0.6533.120)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6F4429642+30946]\n\t(No symbol) [0x00007FF6F43DE3D9]\n\t(No symbol) [0x00007FF6F42D6FDA]\n\t(No symbol) [0x00007FF6F42ACB85]\n\t(No symbol) [0x00007FF6F43537A7]\n\t(No symbol) [0x00007FF6F436A771]\n\t(No symbol) [0x00007FF6F434C813]\n\t(No symbol) [0x00007FF6F431A6E5]\n\t(No symbol) [0x00007FF6F431B021]\n\tGetHandleVerifier [0x00007FF6F455F84D+1301229]\n\tGetHandleVerifier [0x00007FF6F456BDC7+1351783]\n\tGetHandleVerifier [0x00007FF6F4562A13+1313971]\n\tGetHandleVerifier [0x00007FF6F445DD16+245686]\n\t(No symbol) [0x00007FF6F43E759F]\n\t(No symbol) [0x00007FF6F43E3814]\n\t(No symbol) [0x00007FF6F43E39A2]\n\t(No symbol) [0x00007FF6F43DA3FF]\n\tBaseThreadInitThunk [0x00007FF90B197374+20]\n\tRtlUserThreadStart [0x00007FF90CD5CC91+33]", "trace": "self = <testCases.test_orangeHRm_login.Test_OrangeHRM_Login object at 0x0000021C3238B560>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5e34d1162f31243dde7c972eb6dc80da\")>\n\n    def test_OrangeHRM_Login(self, setup):\n        self.driver = setup\n        self.lp =Login_Page1(self.driver)\n>       self.lp.Enter_username(\"Admin\")\n\ntestCases\\test_orangeHRm_login.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObject\\Login_page.py:21: in Enter_username\n    self.wait.until(expected_conditions.visibility_of_element_located(self.text_username_xpath))\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000021C323D9880>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF6F43DA3FF]\\\\n\\\\tBaseThreadInitThunk [0x00007FF90B197374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF90CD5CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=127.0.6533.120)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6F4429642+30946]\nE       \t(No symbol) [0x00007FF6F43DE3D9]\nE       \t(No symbol) [0x00007FF6F42D6FDA]\nE       \t(No symbol) [0x00007FF6F42ACB85]\nE       \t(No symbol) [0x00007FF6F43537A7]\nE       \t(No symbol) [0x00007FF6F436A771]\nE       \t(No symbol) [0x00007FF6F434C813]\nE       \t(No symbol) [0x00007FF6F431A6E5]\nE       \t(No symbol) [0x00007FF6F431B021]\nE       \tGetHandleVerifier [0x00007FF6F455F84D+1301229]\nE       \tGetHandleVerifier [0x00007FF6F456BDC7+1351783]\nE       \tGetHandleVerifier [0x00007FF6F4562A13+1313971]\nE       \tGetHandleVerifier [0x00007FF6F445DD16+245686]\nE       \t(No symbol) [0x00007FF6F43E759F]\nE       \t(No symbol) [0x00007FF6F43E3814]\nE       \t(No symbol) [0x00007FF6F43E39A2]\nE       \t(No symbol) [0x00007FF6F43DA3FF]\nE       \tBaseThreadInitThunk [0x00007FF90B197374+20]\nE       \tRtlUserThreadStart [0x00007FF90CD5CC91+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException"}, "start": 1724106544282, "stop": 1724106544312, "uuid": "a7eb3e44-eed3-495a-aa6e-94b66ae329cc", "historyId": "5f9c1c8d02d0d89ae32060f0f0711bf6", "testCaseId": "5f9c1c8d02d0d89ae32060f0f0711bf6", "fullName": "testCases.test_orangeHRm_login.Test_OrangeHRM_Login#test_OrangeHRM_Login", "labels": [{"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_orangeHRm_login"}, {"name": "subSuite", "value": "Test_OrangeHRM_Login"}, {"name": "host", "value": "DESKTOP-RBGTK7N"}, {"name": "thread", "value": "11456-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_orangeHRm_login"}]}